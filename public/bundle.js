!function(I){var g={};function t(n){if(g[n])return g[n].exports;var C=g[n]={i:n,l:!1,exports:{}};return I[n].call(C.exports,C,C.exports,t),C.l=!0,C.exports}t.m=I,t.c=g,t.d=function(I,g,n){t.o(I,g)||Object.defineProperty(I,g,{enumerable:!0,get:n})},t.r=function(I){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(I,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(I,"__esModule",{value:!0})},t.t=function(I,g){if(1&g&&(I=t(I)),8&g)return I;if(4&g&&"object"==typeof I&&I&&I.__esModule)return I;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:I}),2&g&&"string"!=typeof I)for(var C in I)t.d(n,C,function(g){return I[g]}.bind(null,C));return n},t.n=function(I){var g=I&&I.__esModule?function(){return I.default}:function(){return I};return t.d(g,"a",g),g},t.o=function(I,g){return Object.prototype.hasOwnProperty.call(I,g)},t.p="",t(t.s=0)}([
/*!***********************************!*\
  !*** ./src/index.js + 13 modules ***!
  \***********************************/
/*! no exports provided */
/*! all exports used */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/feed/post.js\nclass Post {\n  constructor(model) {\n    const { id, author, post, date, likes, comments, tags } = model;\n\n    this.id = id;\n    this.author = author;\n    this.post = post;\n    this.date = date;\n    this.likes = likes;\n\n    this.comments = comments;\n    this.showComments = false;\n\n    this.tags = tags;\n\n    this.addLike = this.addLike.bind(this);\n    this.addComment = this.addComment.bind(this);\n    this.render = this.render.bind(this);\n    this.showAllComments = this.showAllComments.bind(this);\n  }\n\n  addLike() {\n    this.likes++;\n  }\n\n  addComment(e) {\n    e.preventDefault();\n    if (!e.target.elements.comment.value) return;\n    // {\n    //     author: { first, last... },\n    //     text: \'text\',\n    // }\n    this.comments.push({\n      author: {\n        avatarUrl: "http://placehold.it/32x32",\n        email: "",\n        firstName: e.target.elements.user_name.value,\n        guid: "",\n        lastName: "",\n        rank: 0\n      },\n      text: e.target.elements.comment.value\n    });\n\n    let commentTemplate = `<div class="commentList">\n                <ul class="nth_comment">\n                    <li>\n                        <p><b>${e.target.elements.user_name.value}</b></p>\n                        <p>${e.target.elements.comment.value}</p></br>\n                    </li>\n                </ul>\n            </div>`;\n\n    document.getElementById(`post_${this.id}`).querySelector(".all_comments").innerHTML += commentTemplate;\n    document.getElementById(`post_${this.id}`).querySelector(".comments_text").innerHTML = `All comments (${this.comments.length})`;\n\n    e.target.elements.comment.value = "";\n  }\n\n  showAllComments() {\n    if (this.showComments) {\n      document.getElementById(`post_${this.id}`).querySelector(".all_comments").innerHTML = "";\n      this.showComments = false;\n    } else {\n      this.showComments = true;\n      let newArrComm = this.comments.map(comment => {\n        comment = `<div class="commentList">\n                            <ul class="nth_comment">\n                                <li>\n                                    <p><b>${comment.author.firstName} ${comment.author.lastName}</b></p>\n                                    <p><em>${comment.text}</em></p></br>\n                                </li>\n                            </ul>\n                        </div>`;\n        return comment;\n      });\n      document.getElementById(`post_${this.id}`).querySelector(".all_comments").innerHTML = newArrComm.join("\\n");\n      document.getElementById(`post_${this.id}`).querySelector(".comments_text").innerHTML = `All comments (${this.comments.length})`;\n    }\n  }\n\n  render() {\n    let currentUser = JSON.parse(localStorage.getItem("SigUpUser"));\n\n    let div = document.createElement("div");\n    div.innerHTML = `\n        <div class="post" id="post_${this.id}">\n\n            <div class="header_post">\n                <div class="user_avatar" title="avatar">\n                    <a href="#">\n                        <img src="${this.author.avatarUrl}">\n                    </a>\n                </div>\n                <div class="wrap_date_name">\n                    <span class="user_name">${this.author.firstName} ${this.author.lastName}</span>\n                    <span class="user_date">${this.date}</span>\n                </div>\n            </div>\n\n            <div class="main_img_post">\n                <img src="${this.post.imageUrl}" alt="">\n            </div>\n\n            <div class="likes">\n                <a href="#" class="_addLike">\n                    <span class="like_count">♥</span>\n                    <span class="like_text">${this.likes} Likes</span>\n                </a>\n            </div>\n\n            <div class="tags">\n                ${this.tags.map(tag => `<a href="#${tag}">#${tag}</a>`).join("\\n")}\n            </div>\n\n            <div class="wrap_main_text">\n                <p class="main_text">${this.post.description}</p>\n            </div>\n\n            <div class="footer_post">\n                <span class="comments_text">All comments (${this.comments.length})</span>\n                <div class="all_comments"></div>\n                ${currentUser !== null ? `<form class="comment_form">\n                                <input hidden name="user_name" value="${currentUser.name} ${currentUser.last}"/>\n                                <input name="comment" type="text" placeholder="Write your comment...">\n                                <button type="submit" title="send" class="_addComment"> > </button>\n                            </form>` : ""}\n            </div>\n        </div>`;\n\n    let _addLike = div.querySelector("._addLike");\n    let showAllComments = div.querySelector(".comments_text");\n    if (currentUser !== null) {\n      let comment_form = div.querySelector(".comment_form");\n      comment_form.addEventListener("submit", this.addComment);\n    }\n\n    showAllComments.addEventListener("click", this.showAllComments);\n\n    _addLike.addEventListener("click", e => {\n      e.preventDefault();\n      this.addLike();\n      let block = document.getElementById("post_" + this.id).querySelector(".like_text").innerText = `${this.likes} likes`;\n    });\n\n    return div;\n  }\n}\n// CONCATENATED MODULE: ./src/feed/feed.js\n\n\nconst POSTS_LIMIT = 5;\n\nclass feed_Feed {\n  constructor() {\n    this.posts = [];\n    this.postsLimit = POSTS_LIMIT;\n  }\n\n  async getPosts() {\n    // [{model}, {model}, ...]\n    //   |        |\n    // [Post,    Post,...]\n    try {\n      const models = await fetch("../data.json").then(res => res.json()); // [{model}, {model}, ...]\n      const posts = models.map(model => new Post(model)); // [Post,    Post,...]\n\n      this.posts = posts;\n    } catch (error) {}\n  }\n\n  findPost(postIds) {\n    // 1 || [1, 2, 3]\n    if (Array.isArray(postIds)) {\n      // postIds = [1, 2, 3]\n      return this.posts.filter(post => postIds.indexOf(post.id) > -1);\n    } else {\n      // postIds = 1\n      return this.posts.filter(post => post.id === postIds);\n    }\n  }\n\n  showPosts() {\n    const container = document.getElementById("wrap_posts");\n\n    container.innerHTML = null;\n\n    this.posts.filter((_, i) => i < this.postsLimit).forEach(post => container.appendChild(post.render()));\n\n    this.postsLimit = this.postsLimit + POSTS_LIMIT;\n  }\n\n  renderPost(ids) {\n    const container = document.getElementById("wrap_posts");\n\n    container.innerHTML = null;\n\n    this.findPost(ids).forEach(post => container.appendChild(post.render()));\n  }\n}\n// CONCATENATED MODULE: ./src/feed/index.js\n\n// CONCATENATED MODULE: ./src/calendar/index.js\n\n\nlet feed2 = new feed_Feed();\nlet new_POSTS;\n\nfeed2.getPosts().then(res => {\n  new_POSTS = feed2.posts.map(old => {\n    let postDate = new Date(old.date);\n\n    return {\n      id: old.id,\n      date: {\n        time: [postDate.getMonth(), postDate.getDate(), postDate.getFullYear()],\n        ms: postDate.getTime()\n      }\n    };\n  });\n  createCal(cal_current_date.getMonth(), cal_current_date.getFullYear());\n});\n\nconst POSTS = [{\n  id: 1,\n  name: "post dog",\n  date: {\n    time: [6, 3, 2018]\n  }\n}, {\n  id: 67,\n  name: "post dog",\n  date: {\n    time: [6, 3, 2018]\n  }\n}, {\n  id: 67,\n  name: "post dog",\n  date: {\n    time: [6, 3, 2018]\n  }\n}, {\n  id: 67,\n  name: "post dog",\n  date: {\n    time: [6, 3, 2018]\n  }\n}, {\n  id: 67,\n  name: "post dog",\n  date: {\n    time: [6, 3, 2018]\n  }\n}, {\n  id: 67,\n  name: "post dog",\n  date: {\n    time: [6, 3, 2018]\n  }\n}, {\n  id: 67,\n  name: "post dog",\n  date: {\n    time: [6, 3, 2018]\n  }\n}, {\n  id: 2,\n  name: "post dog",\n  date: {\n    time: [6, 4, 2018]\n  }\n}, {\n  id: 3,\n  name: "post dog",\n  date: {\n    time: [6, 17, 2018]\n  }\n}, {\n  id: 43,\n  name: "post dog",\n  date: {\n    time: [6, 22, 2018]\n  }\n}, {\n  id: 22,\n  name: "post fish",\n  date: {\n    time: [6, 25, 2018]\n  }\n}, {\n  id: 12,\n  name: "post dog",\n  date: {\n    time: [6, 17, 2018]\n  }\n}, {\n  id: 6,\n  name: "post dog",\n  date: {\n    time: [6, 17, 2017]\n  }\n}, {\n  id: 8,\n  name: "post dog",\n  date: {\n    time: [7, 17, 2018]\n  }\n}, {\n  id: 9,\n  name: "post dog",\n  date: {\n    time: [7, 17, 2018]\n  }\n}];\nconst cal_days_labels = ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"];\nconst cal_months_labels = ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"];\n\n// these are the days of the week for each month, in order\nconst cal_days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst cal_current_date = new Date();\n\nclass Calendar {\n  constructor(month, year) {\n    this.month = isNaN(month) || month == null ? cal_current_date.getMonth() : month;\n    this.year = isNaN(year) || year == null ? cal_current_date.getFullYear() : year;\n    this.html = "";\n    this.renderCalendar = this.renderCalendar;\n  }\n\n  generateObjOfIds(firstDay, startingDay, monthLength) {\n    let daysObj = {}; //этот объект вернеться в конце обработки метода, поэтому необходимо назвать по-человечески\n    let monthName = cal_months_labels[this.month];\n    let day = 1;\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j <= 6; j++) {\n        new_POSTS.map(postDay => {\n          if (postDay.date.time[0] === this.month && postDay.date.time[1] === day) {\n            if (!daysObj[day]) daysObj[day] = [];\n            daysObj[day].push(postDay);\n          }\n        });\n        if (day <= monthLength && (i > 0 || j >= startingDay)) day++;\n      }\n    }\n    return daysObj;\n  }\n\n  getIdsByDate(days, day) {\n    return days.map(a => a.id);\n  }\n\n  renderCalendar(firstDay, startingDay, monthLength) {\n    let dataObj = this.generateObjOfIds(firstDay, startingDay, monthLength);\n    let firstDayIndex = new Date(firstDay).getDay();\n    let monthName = cal_months_labels[this.month];\n    let html = \'<table class="calendar-table">\';\n    html += \'<tr><th class="header_row" colspan="7">\';\n    html += \'<button id="left-btn" class="arrow_btn"><</button> \' + "<span class=\'monthName\'>" + monthName + " " + this.year + "</span>" + \'<button class="arrow_btn" id="right-btn">></button>\';\n    html += "</th></tr>";\n    html += \'<tr class="calendar-header">\';\n\n    for (let i = 0; i <= 6; i++) {\n      html += \'<td class="calendar-header-day">\';\n      html += cal_days_labels[i];\n      html += "</td>";\n    }\n    html += "</tr><tr>";\n    // fill in the days\n    let day = 1;\n\n    if (day === 1 && firstDayIndex !== 0) {\n      for (let o = 0; o < firstDayIndex; o++) {\n        html += "<td></td>";\n      }\n    }\n    // this loop is for is weeks (rows)а\n    for (let i = 0; i < 9; i++) {\n      // this loop is for weekdays (cells)\n      for (let j = 0; j <= 6; j++) {\n        var b = "";\n        new_POSTS.map(postDay => {\n          if (postDay.date.time[0] === this.month && postDay.date.time[1] === day) {\n            b = `data-posts="[${this.getIdsByDate(dataObj[day], day)}]"`;\n          }\n        });\n\n        if (day <= monthLength && (i > 0 || j >= startingDay)) {\n          html += `<td class="calendar-day" ${b}>` + day;\n          day++;\n        }\n        html += "</td>";\n      }\n      // stop making rows if we\'ve run out of days\n      if (day > monthLength) {\n        break;\n      } else {\n        html += "</tr><tr>";\n      }\n    }\n    html += "</tr></table>";\n    return html;\n  }\n\n  generateHTML() {\n    // get first day of month\n    let firstDay = new Date(this.year, this.month, 1);\n    let startingDay = firstDay.getDay();\n    // find number of days in month\n    let monthLength = cal_days_in_month[this.month];\n    // compensate for leap year\n    if (this.month == 1) {\n      // February only!\n      if (this.year % 4 == 0 && this.year % 100 != 0 || this.year % 400 == 0) {\n        monthLength = 29;\n      }\n    }\n    // do the header\n    let calendarDiv = document.createElement("div");\n    calendarDiv.innerHTML = this.renderCalendar(firstDay, startingDay, monthLength);\n    let targetId = document.getElementById("calendar");\n    targetId.innerHTML = null;\n    targetId.appendChild(calendarDiv);\n  }\n\n  generateArrOfMonthes() {\n    let arrayOfrelMonthes = new_POSTS.map(function (elem) {\n      return {\n        m: elem.date.time[0],\n        y: elem.date.time[2],\n        ms: elem.date.ms\n      };\n    });\n    function getUniqueObject(nonUniqueArray) {\n      let result = [];\n      for (let i = 0; i < nonUniqueArray.length; i++) {\n        let currentItem = nonUniqueArray[i];\n\n        if (isObjectPresent(result, currentItem)) {\n          // do nothing\n        } else {\n          result.push(currentItem);\n        }\n      }\n\n      result = result.sort((a, b) => {\n        return a.ms - b.ms;\n      });\n\n      return result;\n    }\n\n    function isObjectPresent(incomeArray, objectToVerify) {\n      for (let i = 0; i < incomeArray.length; i++) {\n        let currentItem = incomeArray[i];\n        if (isSimilar(currentItem, objectToVerify)) return true;\n      }\n      return false;\n    }\n\n    function isSimilar(object1, object2) {\n      if (object1.m === object2.m && object1.y === object2.y) return true;\n      return false;\n    }\n    return getUniqueObject(arrayOfrelMonthes);\n  }\n}\n\nlet arrOfDatesToCal = [];\nlet arrayOfDays = [];\nlet currentPosition = 0;\n\nfunction createCal(month, year) {\n  let cal = new Calendar(month, year);\n  cal.generateHTML();\n  arrOfDatesToCal = cal.generateArrOfMonthes();\n\n  let leftBtn = document.getElementById("left-btn");\n  let rightBtn = document.getElementById("right-btn");\n\n  rightBtn.addEventListener("click", function () {\n    if (currentPosition < arrOfDatesToCal.length - 1) currentPosition++;else currentPosition = 0;\n\n    month = arrOfDatesToCal[currentPosition].m;\n    year = arrOfDatesToCal[currentPosition].y;\n    createCal(month, year);\n  });\n  leftBtn.addEventListener("click", function () {\n    if (currentPosition > 0) {\n      currentPosition--;\n    } else {\n      currentPosition = arrOfDatesToCal.length - 1;\n    }\n\n    month = arrOfDatesToCal[currentPosition].m;\n    year = arrOfDatesToCal[currentPosition].y;\n    createCal(month, year);\n  });\n  countPosts();\n}\n\nfunction countPosts() {\n  let days = document.querySelectorAll("td");\n  days.forEach(function (day) {\n    if (day.dataset.posts !== undefined) {\n      arrayOfDays = JSON.parse(day.dataset.posts);\n      switch (arrayOfDays.length) {\n        case 1:\n          day.classList.add("day-one");\n          break;\n\n        case 2:\n          day.classList.add("day-six");\n          break;\n\n        case 3:\n          day.classList.add("day-nine");\n          break;\n\n        default:\n          day.classList.add("test");\n      }\n    }\n\n    day.addEventListener("click", function (e) {\n      if (e.target.dataset.posts !== undefined) {\n        let arrayOfId = JSON.parse(e.target.dataset.posts);\n        if (arrayOfId.length > 1) {\n          feed2.renderPost(arrayOfId);\n\n          document.querySelector(\'.tab_content[data-id="1"]\').classList.add("show");\n          document.querySelector(\'.tab_content[data-id="2"]\').classList.remove("show");\n        } else {\n          feed2.renderPost(arrayOfId[0]);\n          document.querySelector(\'.tab_content[data-id="1"]\').classList.add("show");\n          document.querySelector(\'.tab_content[data-id="2"]\').classList.remove("show");\n        }\n      }\n    });\n  });\n}\n// CONCATENATED MODULE: ./src/profile/signUp.js\n\nlet array = [];\nlet signUpBtn = document.getElementById("signUp");\nlet logOutBtn = document.getElementById("logout_btn");\nlet setUrlBtn = document.getElementById("setUrl");\nlet hideCont = document.getElementById("profilereg");\nlet showProfileInfo = document.getElementById("profWrap");\nlet signUpEmail = document.getElementById("signUp_email");\n\nlet signUpPass = document.getElementById("signUp_password");\nlet profileAvaUrl = document.querySelectorAll(".profile_Avatar");\nlet cancelChangeBtn = document.createElement("button");\nlet acceptChangeBtn = document.createElement("button");\ncancelChangeBtn.id = "cancelChanges";\nacceptChangeBtn.id = "acceptChanges";\nlet showProf = item => {\n  let sesStor = JSON.stringify(item);\n  let profile_Name = document.getElementById("profile_Name");\n  let profile_Last = document.getElementById("profile_Last");\n  let profile_Email = document.getElementById("profile_Email");\n\n  localStorage.setItem("SigUpUser", sesStor);\n  profile_Name.innerHTML = ` Name: ${item.name}`;\n  if (item.last !== undefined) {\n    profile_Last.innerHTML = ` Last: ${item.last}`;\n  } else {\n    profile_Last.innerHTML = null;\n  }\n  profile_Email.innerHTML = ` Email: ${item.mail}`;\n\n  hideCont.classList.remove("show");\n  hideCont.classList.add("hide");\n  showProfileInfo.classList.remove("hide");\n  showProfileInfo.classList.add("show");\n\n  Array.from(profileAvaUrl).map(url => {\n    url.src = item.avatarUrl;\n  });\n};\nlet login = e => {\n  e.preventDefault();\n  let dataStorage = localStorage.getItem("newUser");\n  let loggedStatus = localStorage.setItem("loggedStatus", "true");\n  let storageObject = JSON.parse(dataStorage);\n  storageObject.map(item => {\n    let sesStor = JSON.stringify(item);\n    localStorage.setItem("SigUpUser", sesStor);\n\n    if (item.mail === signUpEmail.value && item.password === signUpPass.value) {\n      if (localStorage.getItem("SigUpUser")) {\n        showProf(item);\n        location.reload();\n      }\n    } else {\n      let errorOut = document.querySelector(".signUp_error");\n      errorOut.innerText = "Incorrect password";\n      clearField(errorOut);\n    }\n  });\n};\n//\nlet saveInfo = () => {\n  if (localStorage.getItem("logUpUser") == null) {\n    if (localStorage.getItem("loggedStatus") === "true") {\n      let user = JSON.parse(localStorage.getItem("SigUpUser"));\n      showProf(user);\n    }\n  }\n};\n\nfunction logOut(e) {\n  e.preventDefault();\n\n  localStorage.setItem("loggedStatus", "false");\n  localStorage.removeItem("SigUpUser");\n\n  if (localStorage.setItem("loggedStatus", "false")) {\n    hideCont.classList.add("show");\n    hideCont.classList.remove("hide");\n    showProfileInfo.classList.add("hide");\n    showProfileInfo.classList.remove("show");\n\n    Array.from(profileAvaUrl).map(url => {\n      if (url.dataset.id === "4") {\n        url.src = "https://cdn3.iconfinder.com/data/icons/watchify-v1-0-32px/32/lock-512.png";\n      }\n    });\n  }\n  location.reload();\n}\nlet oldUsers = JSON.parse(localStorage.getItem("newUser"));\nfunction setUrlInProfile(e) {\n  e.preventDefault();\n  let dataStorage = localStorage.getItem("SigUpUser");\n  let storageObject = JSON.parse(dataStorage);\n  let arr = [];\n  arr.push(storageObject);\n  arr.map(item => {\n    item.avatarUrl;\n    let inpAvatarProfile = document.getElementById("setAvatar");\n    let errorAvatar = document.getElementById("errorAvatarUrl");\n\n    if (!/(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/gi.test(inpAvatarProfile.value) || inpAvatarProfile.value === "") {\n      errorAvatar.innerHTML = "Incorrect URL";\n      clearField(errorAvatar);\n    } else {\n      let data = [];\n      if (oldUsers !== null) {\n        data = [...oldUsers, item];\n        array = data.sort((a, b) => {\n          if (a.mail === b.mail) {\n            return -1;\n          } else {\n            return 1;\n          }\n        }).reduce(function (arr, el) {\n          if (!arr.length || arr[arr.length - 1].mail != el.mail) {\n            arr.push(el);\n          }\n          return arr;\n        }, []);\n        data = [...array];\n      } else {\n        data = [item];\n      }\n\n      item.avatarUrl = inpAvatarProfile.value;\n      Array.from(profileAvaUrl).map(url => {\n        url.src = inpAvatarProfile.value;\n      });\n\n      localStorage.setItem("newUser", JSON.stringify(data));\n      localStorage.setItem("SigUpUser", JSON.stringify(item));\n    }\n  });\n}\n\nsetUrlBtn.addEventListener("click", setUrlInProfile);\nsignUpBtn.addEventListener("click", login);\nlogOutBtn.addEventListener("click", logOut);\nsaveInfo();\n\n\n/* harmony default export */ var signUp = (showProf);\n// CONCATENATED MODULE: ./src/profile/registration.js\n\n\nlet newArr = [];\n\nlet registrBtn = document.getElementById("registr");\nlet inpName = document.getElementById("login");\nlet inpLast = document.getElementById("last");\nlet inpEmail = document.getElementById("email");\nlet inpPass = document.getElementById("pass");\nlet inpConfirmPass = document.getElementById("confirm_pass");\nlet registration_errorOut = document.getElementById("error_form");\nlet succesOut = document.getElementById("succesRegistr");\n\nlet registration_array = [];\n\nlet arrUsers = [];\n\nlet clearField = el => {\n  setInterval(() => {\n    el.innerText = "";\n  }, 3000);\n};\nlet clearInp = input => {\n  setInterval(() => {\n    input.classList.remove("error_input");\n  }, 3000);\n};\n\nclass Registration {\n  constructor(name, last, email, password) {\n    this.name = name;\n    this.last = last;\n    this.mail = email;\n    this.password = password;\n    this.avatarUrl = "default";\n    if (this.avatarUrl === "default") {\n      this.setUrl();\n    }\n    this.loggedStatus = false;\n    this.authorised = false;\n\n    this.validation();\n    if (this.validation() === true) {\n      arrUsers.push(this);\n      inpName.value = "";\n      inpPass.value = "";\n      inpConfirmPass.value = "";\n    }\n    if (arrUsers.length > 0) {\n      newArr = arrUsers.sort((a, b) => {\n        if (a.mail === b.mail) {\n          return -1;\n        } else {\n          return 1;\n        }\n      }).reduce(function (arr, el) {\n        if (!arr.length || arr[arr.length - 1].mail != el.mail) {\n          arr.push(el);\n        }\n        return arr;\n      }, []);\n      // console.log(newArr)\n    }\n  }\n  validation() {\n    if (this.name === "" || this.name.length < 5) {\n      inpName.classList.add("error_input");\n\n      registration_errorOut.innerHTML = `Incorrect name`;\n      clearField(registration_errorOut);\n      clearInp(inpName);\n      inpName.value = "";\n\n      return false;\n    } else if (!/(\\b\\w*)@(\\w+\\.\\w+\\b)/.test(this.mail)) {\n      inpEmail.classList.add("error_input");\n      registration_errorOut.innerHTML = `Incorrect email`;\n      clearField(registration_errorOut);\n      clearInp(inpEmail);\n      inpEmail.value = "";\n      return false;\n    } else if (this.password.length < 5 || this.password !== inpConfirmPass.value) {\n      inpPass.classList.add("error_input");\n      inpConfirmPass.classList.add("error_input");\n      registration_errorOut.innerHTML = `Incorrect password`;\n      clearField(registration_errorOut);\n      clearInp(inpPass);\n      inpPass.value = "";\n      inpConfirmPass.value = "";\n\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  setUrl() {\n    this.avatarUrl = "https://cdn4.iconfinder.com/data/icons/essential-app-2/16/user-avatar-human-admin-login-512.png";\n  }\n}\n\nlet registration_oldUsers = JSON.parse(localStorage.getItem("newUser"));\nlet data = [];\nlet uniqueUser = (arr1, arr2) => {\n  if (registration_oldUsers !== null) {\n    data = [...arr1, ...arr2];\n    registration_array = data.sort((a, b) => {\n      if (a.mail === b.mail) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }).reduce(function (arr, el) {\n      if (!arr.length || arr[arr.length - 1].mail != el.mail) {\n        arr.push(el);\n      }\n      return arr;\n    }, []);\n    data = [...registration_array];\n  } else {\n    data = [...arr2];\n  }\n};\n\nlet createUser = e => {\n  e.preventDefault();\n  let usr = new Registration(inpName.value, inpLast.value, inpEmail.value, inpPass.value);\n  uniqueUser(registration_oldUsers, newArr);\n  if (usr.authorised !== data[0].authorised) {\n    registration_errorOut.innerText = "This email is already registered";\n    clearField(succesOut);\n    inpEmail.value = "";\n    clearField(registration_errorOut);\n  } else {\n    localStorage.setItem("loggedStatus", "true");\n    usr.authorised = true;\n    signUp(usr);\n    location.reload();\n  }\n  localStorage.setItem("newUser", JSON.stringify(data));\n  data.map(item => {\n    item.loggedStatus = true;\n  });\n};\n// localStorage.setItem(\'loggedStatus\', \'true\');\n\nregistrBtn.addEventListener("click", createUser);\n\n// CONCATENATED MODULE: ./src/profile/index.js\n\n\n// CONCATENATED MODULE: ./src/search/createNode.js\nconst createNode = (item, name, zid) => {\n  let elem = document.createElement(item);\n  elem.innerHTML = name;\n  if (zid !== undefined) {\n    elem.dataset.id = zid;\n  }\n  return elem;\n};\n\n/* harmony default export */ var search_createNode = (createNode);\n// CONCATENATED MODULE: ./src/search/search.js\n\n\nconst SearchFunc = (model, feed) => {\n  let s, obj, uniqueArr, inp_search, inp_val, btn_search, result_search, a, block_overlay, result_array, wr_posts;\n\n  inp_search = document.getElementById("inp_search");\n  result_search = document.getElementById("result_search");\n  a = result_search.getElementsByTagName("a");\n  block_overlay = document.getElementById("block_overlay");\n\n  inp_search.addEventListener("input", e => {\n    e.preventDefault();\n\n    result_search.style.visibility = "visible";\n    result_search.style.opacity = "1";\n    block_overlay.style.display = "block";\n    result_search.innerHTML = null;\n\n    inp_val = e.target.value.toLowerCase();\n    result_array = model.filter(item => {\n      if (item.tags.includes(inp_val)) {\n        return item;\n      }\n      if (item.name.toLowerCase().includes(inp_val)) {\n        return item;\n      }\n    });\n\n    result_array.map(item => {\n      if (item.tags.includes(inp_val)) {\n        a = search_createNode("a", item.tags, item.id);\n\n        a.onclick = e => {\n          let click_item_id = item.id;\n          document.querySelector(\'.tab_content[data-id="1"]\').classList.add("show");\n          document.querySelector(\'.tab_content[data-id="2"]\').classList.remove("show");\n          result_search.innerHTML = null;\n          result_search.style.visibility = null;\n          result_search.style.opacity = null;\n          block_overlay.style.display = null;\n\n          feed.renderPost(click_item_id);\n        };\n\n        a.style.cursor = "pointer";\n        result_search.appendChild(a);\n      }\n      if (item.name.includes(inp_val)) {\n        a = search_createNode("a", item.name, item.id);\n\n        a.onclick = e => {\n          let click_item_id = item.id;\n          document.querySelector(\'.tab_content[data-id="1"]\').classList.add("show");\n          document.querySelector(\'.tab_content[data-id="2"]\').classList.remove("show");\n          result_search.innerHTML = null;\n          result_search.style.visibility = null;\n          result_search.style.opacity = null;\n          block_overlay.style.display = null;\n\n          feed.renderPost(click_item_id);\n        };\n\n        a.style.cursor = "pointer";\n        result_search.appendChild(a);\n      }\n    });\n  });\n\n  block_overlay.addEventListener("click", e => {\n    e.preventDefault();\n    result_search.innerHTML = null;\n    result_search.style.visibility = null;\n    result_search.style.opacity = null;\n    block_overlay.style.display = null;\n  });\n};\n\n/* harmony default export */ var search = (SearchFunc);\n// CONCATENATED MODULE: ./src/search/tags.js\n\n\nconst TagsPage = (model, feed) => {\n  let a, result_array, wr_tags;\n\n  wr_tags = document.getElementById("tags");\n  a = wr_tags.getElementsByTagName("a");\n\n  let xTags = [];\n  model.map(item => {\n    item.tags.map(tag => xTags.push(tag));\n  });\n  const filterUnique = (val, ind, elem) => elem.indexOf(val) === ind;\n  result_array = xTags.filter(filterUnique);\n\n  wr_tags.innerHTML = null;\n\n  result_array.map(item => {\n    a = search_createNode("a", item);\n\n    a.onclick = e => {\n      let serachRes = model.filter(post => {\n        return post.tags.some(tag => tag === item);\n      });\n      serachRes = serachRes.map(post => post.id);\n\n      feed.renderPost(serachRes);\n\n      document.querySelector(\'.tab_content[data-id="1"]\').classList.toggle("show");\n      document.querySelector(\'.tab_content[data-id="3"]\').classList.toggle("show");\n    };\n\n    a.style.cursor = "pointer";\n    wr_tags.appendChild(a);\n  });\n};\n\n/* harmony default export */ var tags = (TagsPage);\n// CONCATENATED MODULE: ./src/search/index.js\n\n\n\n\n\nlet search_feed = new feed_Feed();\nlet search_model;\nsearch_feed.getPosts().then(res => {\n  search_model = search_feed.posts.map(old => {\n    return {\n      id: old.id,\n      name: `${old.author.firstName} ${old.author.lastName}`,\n      tags: old.tags.map(item => item.toLowerCase())\n    };\n  });\n  search(search_model, search_feed);\n  tags(search_model, search_feed);\n});\n// CONCATENATED MODULE: ./src/tabs/tabs.js\nlet tab_container = document.getElementById("tab_container");\nlet profAvatar = document.getElementById("profAvat");\n\nlet tabs_arr = Array.from(tab_container.children); // refactor collection of children tab_container to array\n\nlet tabHandler = tabs_arr.map(item => {\n  let curPos = item.dataset.id; // set current position of item\n  item.addEventListener("click", e => {\n    e.preventDefault();\n\n    let tab_content = document.querySelectorAll(".tab_content"); // get all block with class tab_content\n    let arrTabContent = Array.from(tab_content); // refactor collection of tab_content to array\n\n    //this function show content if data-attribute id equals between tab_container.children and tab_content\n    arrTabContent.map(tab => {\n      if (item.dataset.id === tab.dataset.id) {\n        tab.classList.add("show");\n      } else {\n        tab.classList.remove("show");\n        tab.classList.add("hide");\n      }\n    });\n    // this block add class \'active\' for chosen element and remove class for previous\n    tabs_arr.map(activeLine => {\n      activeLine.classList.remove("active");\n      tabs_arr[curPos - 1].classList.add("active");\n    });\n  });\n  profAvatar.addEventListener("click", e => {\n    let tab_content = document.querySelectorAll(".tab_content");\n    let arrTabContent = Array.from(tab_content);\n    arrTabContent.map(tab => {\n      if (profAvatar.dataset.id === tab.dataset.id) {\n        tab.classList.add("show");\n      } else {\n        tab.classList.remove("show");\n        tab.classList.add("hide");\n      }\n    });\n    tabs_arr.map(activeLine => {\n      activeLine.classList.remove("active");\n      tabs_arr[curPos - 1].classList.add("active");\n    });\n  });\n});\n\n/* harmony default export */ var tabs = (tabHandler);\n// CONCATENATED MODULE: ./src/tabs/index.js\n\n// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\nconst src_feed = new feed_Feed();\n\nlet btn = document.createElement("input");\nbtn.type = "button";\nbtn.value = "Show More";\nbtn.addEventListener("click", () => src_feed.showPosts());\ndocument.getElementById("posts").appendChild(btn);\n\ndocument.addEventListener("DOMContentLoaded", async () => {\n  await src_feed.getPosts();\n\n  // feed.renderPost(["5b3a64a948208773858a50f9", "5b3a64a9ba5e67189b095c96", "5b3a64a9fe1844d6922eecd6"]);\n  src_feed.showPosts();\n});\n\n// feed.getPosts();  скачує всі наші пости\n// feed.showPost(); показує перші 5 постів, а при повторному виклиці показує наступці 5\n// feed.renderPost(); приймає id або масив id і виводить на екран//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n')}]);